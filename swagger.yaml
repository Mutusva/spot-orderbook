basePath: /
consumes:
- application/json
definitions:
  Decimal:
    description: number = value * 10 ^ exp
    title: Decimal represents a fixed-point decimal. It is immutable.
    type: object
    x-go-package: github.com/shopspring/decimal
  LimitOrder:
    properties:
      order_id:
        description: OrderId
        example: order-1
        type: string
        x-go-name: OrderId
      price:
        $ref: '#/definitions/Decimal'
      quantity:
        $ref: '#/definitions/Decimal'
      side:
        description: |-
          enum 0 for sell and 1 for buy
          Side
        example: 0
        format: int32
        type: integer
        x-go-name: Side
    required:
    - side
    - order_id
    - quantity
    - price
    type: object
    x-go-package: spotob/src/models
  LimitOrderResponse:
    properties:
      done:
        description: Orders that are done
        items:
          $ref: '#/definitions/Order'
        type: array
        x-go-name: Done
      partial:
        $ref: '#/definitions/Order'
      partialQuantityProcessed:
        $ref: '#/definitions/Decimal'
    type: object
    x-go-package: spotob/src/models
  MarketOrderRequest:
    properties:
      quantity:
        $ref: '#/definitions/Decimal'
      side:
        description: |-
          swagger: model
          enum 0 for sell and 1 for buy
        format: int32
        type: integer
        x-go-name: Side
    required:
    - side
    - quantity
    type: object
    x-go-package: spotob/src/models
  MarketOrderResponse:
    properties:
      done:
        description: |-
          The Market Order response
          Orders that are done
        items:
          $ref: '#/definitions/Order'
        type: array
        x-go-name: Done
      partial:
        $ref: '#/definitions/Order'
      partialQuantityProcessed:
        $ref: '#/definitions/Decimal'
      quantityLeft:
        $ref: '#/definitions/Decimal'
    type: object
    x-go-package: spotob/src/models
  Order:
    description: Order strores information about request
    required:
    - side
    - id
    - timestamp
    - quantity
    - price
    type: object
    x-go-name: OrderResponse
    x-go-package: github.com/muzykantov/orderbook
  OrderBookDepth:
    properties:
      asks:
        description: asks
        items:
          $ref: '#/definitions/PriceLevel'
        type: array
        x-go-name: Asks
      bids:
        description: bids
        items:
          $ref: '#/definitions/PriceLevel'
        type: array
        x-go-name: Bids
    type: object
    x-go-package: spotob/src/models
  PriceLevel:
    description: PriceLevel contains price and volume in depth
    properties:
      price:
        $ref: '#/definitions/Decimal'
      quantity:
        $ref: '#/definitions/Decimal'
    type: object
    x-go-package: github.com/muzykantov/orderbook
info:
  description: Documentation for Spot OrderBook API
  title: Spot OrderBook API
  version: 1.0.0
paths:
  /cancelOrder/{id}:
    get:
      operationId: cancelOrder
      parameters:
      - description: id of the order to cancel
        in: path
        name: order id
        required: true
        schema:
          description: id of the order to cancel
          format: string
          type: string
        type: integer
      responses:
        "200":
          description: Order
          schema:
            $ref: '#/definitions/Order'
        "401":
          $ref: '#/responses/ErrorResponse'
  /depth:
    get:
      operationId: depth
      responses:
        "200":
          description: OrderBookDepth
          schema:
            $ref: '#/definitions/OrderBookDepth'
        "401":
          $ref: '#/responses/ErrorResponse'
  /processLimitOrder:
    post:
      description: Create a new limit order
      operationId: processLimitOrder
      parameters:
      - in: body
        name: LimitOrder
        required: true
        schema:
          $ref: '#/definitions/LimitOrder'
          type: object
        type: object
      responses:
        "200":
          description: LimitOrderResponse
          schema:
            $ref: '#/definitions/LimitOrderResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "404":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
  /processMarketOrder:
    post:
      description: Create a new market order for processing
      operationId: processMarketOrder
      parameters:
      - in: body
        name: MarketOrderRequest
        required: true
        schema:
          $ref: '#/definitions/MarketOrderRequest'
          type: object
        type: object
      responses:
        "200":
          description: MarketOrderResponse
          schema:
            $ref: '#/definitions/MarketOrderResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
produces:
- application/json
responses:
  ErrorResponse:
    description: An Error response
    headers:
      code:
        description: |-
          The error message
          name code
        format: int64
        type: integer
      errors:
        description: errors
    schema:
      additionalProperties:
        type: string
      type: object
schemes:
- http
swagger: "2.0"
